<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on nametake.dev</title>
    <link>https://nametake.dev/tags/vim/</link>
    <description>Recent content in Vim on nametake.dev</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 28 Jul 2024 00:00:00 +0900</lastBuildDate>
    <atom:link href="https://nametake.dev/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NERDTreeでファイルを開いたときにタグスタックに積む</title>
      <link>https://nametake.dev/posts/2024/07/28/nerdtree-tag-stack/</link>
      <pubDate>Sun, 28 Jul 2024 00:00:00 +0900</pubDate>
      <guid>https://nametake.dev/posts/2024/07/28/nerdtree-tag-stack/</guid>
      <description>&lt;p&gt;自分はVimでのバッファ移動によくタグスタックを使っている。&lt;/p&gt;&#xA;&lt;p&gt;思考スタイル的にすぐ前に戻るという感覚がやりやすいのか、telescopeでファイルを開いたときも全部タグスタックに積んでコマンド入力でポンポン前のファイルに戻っている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>telescope.nvimのgit_filesやlive_grepでもtagstackに積みたい</title>
      <link>https://nametake.dev/posts/2023/12/13/telescope-nvim-git-files-tagstack/</link>
      <pubDate>Wed, 13 Dec 2023 00:00:00 +0900</pubDate>
      <guid>https://nametake.dev/posts/2023/12/13/telescope-nvim-git-files-tagstack/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;telescope.nvim&lt;/a&gt;のgit_filesやlive_grepでのファイル移動でもTagstackに積みたかった。&lt;/p&gt;&#xA;&lt;p&gt;結論からいうと以下の設定でいけた。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;telescope&amp;#39;&lt;/span&gt;).setup {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  defaults &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;-- ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  pickers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git_files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      push_tagstack_on_edit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  extensions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    live_grep_args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;-- ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      push_tagstack_on_edit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;git_filesはpickersごとに&lt;code&gt;push_tagstack_on_edit&lt;/code&gt;をtrueにするだけで動いた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>golangci-lint-langserverを作った話</title>
      <link>https://nametake.dev/posts/2020/03/08/golangci-lint-langserver/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.dev/posts/2020/03/08/golangci-lint-langserver/</guid>
      <description>&lt;p&gt;最近VimのLinterのプラグインをaleからすべてlanguage serverに移行した。&lt;/p&gt;&#xA;&lt;p&gt;殆どのCLIツールは&lt;a href=&#34;https://github.com/iamcco/diagnostic-languageserver&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;diagnostic-languageserver&lt;/a&gt;経由で使うことでいい感じに動いてくれている。&lt;/p&gt;&#xA;&lt;p&gt;ただ、&lt;a href=&#34;https://github.com/golangci/golangci-lint&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;golangci-lint&lt;/a&gt;だけはGoのスコープとの相性の関係ではうまく動作させることができなかった。&lt;/p&gt;&#xA;&lt;p&gt;そこで、golangci-lint専用のlanguage server、&lt;a href=&#34;https://github.com/nametake/golangci-lint-langserver&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;golangci-lint-langserver&lt;/a&gt;を作成してみた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>aleとneoformatからdiagnostic-languageserverに移行した</title>
      <link>https://nametake.dev/posts/2020/02/26/migration-diagnostic-languageserver/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.dev/posts/2020/02/26/migration-diagnostic-languageserver/</guid>
      <description>&lt;p&gt;Vimのプラグインとしてaleとneoformatをずっと利用してきたが、LinterやFormatterも全てLanguage Serverに移行しようと思い、 &lt;a href=&#34;https://github.com/iamcco/diagnostic-languageserver&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;diagnostic-languageserver&lt;/a&gt; に移行した。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Goの戻り値をいい感じに補完してくれるvim-snippetsを作った</title>
      <link>https://nametake.dev/posts/2019/07/29/vim-goiferr-snippets/</link>
      <pubDate>Mon, 29 Jul 2019 22:57:06 +0900</pubDate>
      <guid>https://nametake.dev/posts/2019/07/29/vim-goiferr-snippets/</guid>
      <description>&lt;p&gt;最近Vimの設定を整理してcoc.nvimに乗り換えるにあたり、snippetのプラグインもneosnippetからcoc-neosnippetに乗り換え、snippet集もvim-snippetsに変更した。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vimのプラグインを整理した(あとcoc.nvimの紹介)</title>
      <link>https://nametake.dev/posts/2019/07/25/change-vim-plugins/</link>
      <pubDate>Thu, 25 Jul 2019 00:51:43 +0900</pubDate>
      <guid>https://nametake.dev/posts/2019/07/25/change-vim-plugins/</guid>
      <description>&lt;p&gt;ちまちまと&lt;a href=&#34;https://github.com/nametake/dotfiles&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dotfiles&lt;/a&gt;を育ててきたが、Goの補完が動かなくなっていたり中途半端にLSP対応しようとした痕跡だけ残っていたりしたので、断捨離も兼ねてガッツリプラグインを整理した。&lt;/p&gt;&#xA;&lt;p&gt;プラグインの構成は&lt;a href=&#34;https://github.com/nametake/dotfiles/blob/master/vim/rc/plug.rc.vim&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dotfiles/vim/rc/plug.rc.vim&lt;/a&gt;に全部寄せている。&lt;/p&gt;&#xA;&lt;p&gt;あんまり凝った構成にしてもメンテナンスが大変なので、以下の基準でプラグインを選んだ。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;githubのStar数が多くてAPIが安定してそう&lt;/li&gt;&#xA;&lt;li&gt;少ない設定でも動く&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;整理しているときに、&lt;a href=&#34;https://github.com/neoclide/coc.nvim&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;coc.nvim&lt;/a&gt;という良さげな補完プラグインを見つけたので軽く紹介してみる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>IntelliJのPopupの候補を展開するKeymap</title>
      <link>https://nametake.dev/posts/2019/01/20/intellij-popup-expand/</link>
      <pubDate>Sun, 20 Jan 2019 21:05:06 +0900</pubDate>
      <guid>https://nametake.dev/posts/2019/01/20/intellij-popup-expand/</guid>
      <description>&lt;p&gt;自分は普段Vimでの補完候補を&lt;code&gt;&amp;lt;C-k&amp;gt;&lt;/code&gt;で展開しているがIntelliJでの補完候補も同じコマンドで展開したかったのでメモ。&lt;/p&gt;&#xA;&lt;p&gt;結論だけいうと、Editor Actions -&amp;gt; Choose Lookup ItemにKeymapを設定すればできた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>VimConf2018感想</title>
      <link>https://nametake.dev/posts/2018/11/24/vimconf2018/</link>
      <pubDate>Sat, 24 Nov 2018 10:15:34 +0900</pubDate>
      <guid>https://nametake.dev/posts/2018/11/24/vimconf2018/</guid>
      <description>&lt;p&gt;11月24日にあった&lt;a href=&#34;https://vimconf.org/2018/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VimConf2018&lt;/a&gt;へ行ったので参加ブログ。&lt;/p&gt;&#xA;&lt;!-- textlint-disable ja-technical-writing/no-exclamation-question-mark --&gt;&#xA;&lt;h3 id=&#34;keynote---what-is-the-next-featureo&#34;&gt;&#xA;  Keynote - What is the next feature?(o)&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#keynote---what-is-the-next-featureo&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;!-- textlint-enable --&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/e/2PACX-1vTj2uCbuCffhaLVBZE6biI538GG6jMi1INbku-T9q5hu5W0zGLwuibN3m5xbEuqdUFTDnhdhtikPyTi/pub?start=false%5c&amp;amp;loop=false%5c&amp;amp;delayms=3000%5c&amp;amp;slide=id.p&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;スライド&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;mattnさんの発表。&lt;/p&gt;&#xA;&lt;h3 id=&#34;keynote---vim-from-hjkl-to-a-platform-for-plugins&#34;&gt;&#xA;  Keynote - Vim: From hjkl to a platform for plugins&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#keynote---vim-from-hjkl-to-a-platform-for-plugins&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;楽しみにしていたBram氏の発表。&lt;/p&gt;</description>
    </item>
    <item>
      <title>neoformatでshfmtを使うときにインデントをタブ文字にしたい時の設定</title>
      <link>https://nametake.dev/posts/2018/10/10/vim-shfmt-neoformat-indent/</link>
      <pubDate>Wed, 10 Oct 2018 11:44:32 +0900</pubDate>
      <guid>https://nametake.dev/posts/2018/10/10/vim-shfmt-neoformat-indent/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/sbdchd/neoformat&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;neoformat&lt;/code&gt;&lt;/a&gt;で使う&lt;a href=&#34;https://github.com/mvdan/sh&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;shfmt&lt;/code&gt;&lt;/a&gt;はデフォルトだとインデントがスペースだが、チームのコーディング規約に合わせてタブ文字へ変更したかったときにちょっと引っかかったのでメモ。&lt;/p&gt;&#xA;&lt;p&gt;まずは、&lt;code&gt;shfmt&lt;/code&gt; のヘルプと&lt;code&gt;neoformat&lt;/code&gt;の&lt;code&gt;shfmt&lt;/code&gt;の定義を見てみる。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -i uint   indent: 0 for tabs (default), &amp;gt;0 for number of spaces&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;! &lt;span style=&#34;color:#a6e22e&#34;&gt;neoformat&lt;/span&gt;#&lt;span style=&#34;color:#a6e22e&#34;&gt;formatters&lt;/span&gt;#&lt;span style=&#34;color:#a6e22e&#34;&gt;sh&lt;/span&gt;#&lt;span style=&#34;color:#a6e22e&#34;&gt;shfmt&lt;/span&gt;() &lt;span style=&#34;color:#a6e22e&#34;&gt;abort&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            \ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exe&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;shfmt&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            \ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;args&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-i &amp;#39;&lt;/span&gt; . &lt;span style=&#34;color:#a6e22e&#34;&gt;shiftwidth&lt;/span&gt;()],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            \ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stdin&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            \ }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;endfunction&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;shfmt&lt;/code&gt;のヘルプから、インデントをタブにしたければ&lt;code&gt;-i&lt;/code&gt;引数で0を渡せば良さそう。neoformatの定義ではインデントの値に&lt;code&gt;shiftwidth&lt;/code&gt;の値をしているようだったので、プロジェクトでのVimの設定を以下のように設定してみた(&lt;a href=&#34;https://qiita.com/unosk/items/43989b61eff48e0665f3&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;プロジェクト固有の設定&lt;/a&gt;ができるようにしている)。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
