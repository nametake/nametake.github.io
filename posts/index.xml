<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on nametake.dev</title>
    <link>https://nametake.github.io/posts/</link>
    <description>Recent content in Posts on nametake.dev</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 13 Jan 2024 00:00:00 +0900</lastBuildDate>
    <atom:link href="https://nametake.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Goのコード内のZetaSQLをフォーマットするツールを作った</title>
      <link>https://nametake.github.io/posts/2024/01/13/go-zetasqlfmt/</link>
      <pubDate>Sat, 13 Jan 2024 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2024/01/13/go-zetasqlfmt/</guid>
      <description>GoからSpannerのQueryを実行しようとするとcloud.google.com/go/spannerのStatement構造体のSQ</description>
    </item>
    <item>
      <title>go/packagesでformatterを作る</title>
      <link>https://nametake.github.io/posts/2024/01/08/use-go-packages/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2024/01/08/use-go-packages/</guid>
      <description>特定の構造体の文字列を置き換えるFormatterを作ったときにgo/packagesを使って作ってみたので備忘録。 全体の流れ Link to heading pack</description>
    </item>
    <item>
      <title>Goの関数定義の引数をチェックするLinterを作った</title>
      <link>https://nametake.github.io/posts/2024/01/01/mustargs/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2024/01/01/mustargs/</guid>
      <description>チームでWebサービスを書いていると特定の条件の関数には特定の型の引数を渡すことがルールになっていくことがある。 例えば、マルチテナントなアプ</description>
    </item>
    <item>
      <title>telescope.nvimのgit_filesやlive_grepでもtagstackに積みたい</title>
      <link>https://nametake.github.io/posts/2023/12/13/telescope-nvim-git-files-tagstack/</link>
      <pubDate>Wed, 13 Dec 2023 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2023/12/13/telescope-nvim-git-files-tagstack/</guid>
      <description>telescope.nvimのgit_filesやlive_grepでのファイル移動でもTagstackに積みたかった。 結論からいうと以下の</description>
    </item>
    <item>
      <title>hugo-coderテーマの拡張</title>
      <link>https://nametake.github.io/posts/2023/12/10/hugo-coder-custom-font/</link>
      <pubDate>Sun, 10 Dec 2023 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2023/12/10/hugo-coder-custom-font/</guid>
      <description>長らく放置してしまってブログを書く場所に困ったのでこのブログの環境を整備し直した。 テーマのバージョンアップもしたが、その時に色々と気になって</description>
    </item>
    <item>
      <title>display: gridでテーブルをスタイリングする時にdisplay: contentsを使う</title>
      <link>https://nametake.github.io/posts/2021/02/14/grid-with-display-contents/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2021/02/14/grid-with-display-contents/</guid>
      <description>両端のborderがないテーブルをgridでスタイリングしようとすると、 :not(:first-of-type) をただ使うだけではうまくいかない。 gridにまかせて以下のようにす</description>
    </item>
    <item>
      <title>react-resizableにemotionでスタイルを当てる</title>
      <link>https://nametake.github.io/posts/2020/10/25/react-resizable-emotion/</link>
      <pubDate>Sun, 25 Oct 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/10/25/react-resizable-emotion/</guid>
      <description>react-resizable に emotion でスタイルを当てた時のメモ。 import { ResizableBox } from &amp;#39;react-resizable&amp;#39;; const StyledResizableBox = styled(ResizableBox)` position: relative; display: inline-flex; flex-direction: column; align-items: right; justify-content: center; padding-left: 20px; overflow: hidden; border: 1px solid black; .react-resizable-handle { position: absolute; right: 0; width: 4px; height: 90%; border-left: 1px solid black; :hover { cursor: col-resize; } } `; 上記の例</description>
    </item>
    <item>
      <title>Reactでアクセシビリティを維持したRadioボタンをデザインする</title>
      <link>https://nametake.github.io/posts/2020/09/26/react-a11y-radio/</link>
      <pubDate>Sat, 26 Sep 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/09/26/react-a11y-radio/</guid>
      <description>ReactでRadioボタンにデザインを当てようとすると、 display: none を使う方法を紹介している記事が多いが、その方法ではアクセシビリティが消えてしま</description>
    </item>
    <item>
      <title>SVGが特定のサイズ以下でずれる現象の原因と解決策</title>
      <link>https://nametake.github.io/posts/2020/08/10/css-svg-inline-descender/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/08/10/css-svg-inline-descender/</guid>
      <description>下記ブログを参考にしてアクセシビリティを維持したままCheckboxやRadioボタンを作ろうとしたが、特定のサイズ以下でずれる問題に遭遇し</description>
    </item>
    <item>
      <title>TypeScript &#43; electron-webpackでemotionを動かしたときのメモ</title>
      <link>https://nametake.github.io/posts/2020/08/04/typescript-electron-webpack-emotion/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/08/04/typescript-electron-webpack-emotion/</guid>
      <description>electron-webpack で emotion を動かそうとして試行錯誤したのでその結果のメモ。 ライブラリとバージョン Link to heading TypeScript(3.9.5) electron-webpack(2.8.2) emotion(10.0.27) ts-loader(7.0.5) babel-loader(8.1.0) babel-plugin-emotion(10.0.33) 起きた問題 Link to heading styled-componen</description>
    </item>
    <item>
      <title>DDDにおける外部サービスの抽象化</title>
      <link>https://nametake.github.io/posts/2020/07/25/abstract-external-service/</link>
      <pubDate>Sat, 25 Jul 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/07/25/abstract-external-service/</guid>
      <description>外部サービスの抽象化 Link to heading 最近のシステムはその複雑さの上昇に伴い、様々な外部サービスと連携する機会が多い。 その際、ドメインとして外部サービス</description>
    </item>
    <item>
      <title>Conditional Typesを使った話</title>
      <link>https://nametake.github.io/posts/2020/07/13/conditional-types/</link>
      <pubDate>Mon, 13 Jul 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/07/13/conditional-types/</guid>
      <description>機能としては知っていたものの使う機会がなかった Conditional Types を使ったのでメモ。 ElectronのMainプロセスでAPIを叩く際、API毎にchann</description>
    </item>
    <item>
      <title>組み合わせテストでの直交表とPICTの利用</title>
      <link>https://nametake.github.io/posts/2020/06/28/combination-test-pict-and-orthogonal-array/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/06/28/combination-test-pict-and-orthogonal-array/</guid>
      <description>テストの組み合わせについてある程度知見が溜まったのでメモ。 結合テストの組み合わせ問題 Link to heading システムのリリース前には開発した機能や既存の機能を</description>
    </item>
    <item>
      <title>Protocol Buffersのgo_packageの;の仕様</title>
      <link>https://nametake.github.io/posts/2020/05/24/protobuf-go-package-semicolon/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/05/24/protobuf-go-package-semicolon/</guid>
      <description>先日protoc-gen-gohttpの依存パッケージをしようと思って色々触っていたら以下のようなWARNINGが出てきた。 2020/05/24 11:36:51 WARNING: Deprecated use of &amp;#39;go_package&amp;#39; option</description>
    </item>
    <item>
      <title>集約におけるトランザクションのドメイン的関心と技術的関心</title>
      <link>https://nametake.github.io/posts/2020/04/30/ddd-aggregate/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/04/30/ddd-aggregate/</guid>
      <description>集約のトランザクション Link to heading DDDの集約について学ぶと、必ず「集約はトランザクション境界である」という説明がされている。 整合性の境界の論理的</description>
    </item>
    <item>
      <title>golangci-lint-langserverを作った話</title>
      <link>https://nametake.github.io/posts/2020/03/08/golangci-lint-langserver/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/03/08/golangci-lint-langserver/</guid>
      <description>最近VimのLinterのプラグインをaleからすべてlanguage serverに移行した。 殆どのCLIツールはdiagnostic-la</description>
    </item>
    <item>
      <title>aleとneoformatからdiagnostic-languageserverに移行した</title>
      <link>https://nametake.github.io/posts/2020/02/26/migration-diagnostic-languageserver/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/02/26/migration-diagnostic-languageserver/</guid>
      <description>Vimのプラグインとしてaleとneoformatをずっと利用してきたが、LinterやFormatterも全てLanguage Server</description>
    </item>
    <item>
      <title>TypeScriptでFormのComponentを配列で管理する</title>
      <link>https://nametake.github.io/posts/2020/01/31/ts-array-form-onchange/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2020/01/31/ts-array-form-onchange/</guid>
      <description>TypeScriptでFormのComponentを配列で管理する Link to heading toB向けのサービスや管理画面のように情報量の多いのプロダクトを作っ</description>
    </item>
    <item>
      <title>Go言語でジェネリクスない理由の考察</title>
      <link>https://nametake.github.io/posts/2019/12/31/go-no-generics/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/12/31/go-no-generics/</guid>
      <description>Go言語にはジェネリクスがない。 他言語から入ってきた方はかなりこの部分に戸惑うことが多い。 そこで、そういった方々になぜジェネリクスがないのか</description>
    </item>
    <item>
      <title>Hooks対応したreact-tableをTypeScriptで使う</title>
      <link>https://nametake.github.io/posts/2019/12/17/react-table/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://nametake.github.io/posts/2019/12/17/react-table/</guid>
      <description>この記事はReact Advent Calendar 2019の記事。 サービスにもよるとは思うが、業務系のサービスではテーブルUIはほぼ確実に登場する。 しかも、よく登場す</description>
    </item>
    <item>
      <title>Goの関数内で呼び出される関数をインターセプトする方法</title>
      <link>https://nametake.github.io/posts/2019/12/09/go-func-intercept/</link>
      <pubDate>Mon, 09 Dec 2019 00:05:29 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/12/09/go-func-intercept/</guid>
      <description>この記事はGo2 Advent Calendar 2019の記事。 自分はprotoc-gen-gohttpというプラグインを作っているが、先日grpc.UnaryServ</description>
    </item>
    <item>
      <title>Go1.13のerrorsにWrapの機能が入ったので勉強がてらまとめる</title>
      <link>https://nametake.github.io/posts/2019/10/30/unwrap-interface/</link>
      <pubDate>Wed, 30 Oct 2019 00:52:57 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/10/30/unwrap-interface/</guid>
      <description>Go1.13からerrorsに色々機能が入った(The Go Blog)。 最近は新しいGoのことをインプットできていなかったので、リハビリがてらs</description>
    </item>
    <item>
      <title>TypeScirptのプロジェクトにエイリアスを設定して絶対パスでimportするメモ</title>
      <link>https://nametake.github.io/posts/2019/10/07/typescript-absolute-imports/</link>
      <pubDate>Mon, 07 Oct 2019 00:15:35 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/10/07/typescript-absolute-imports/</guid>
      <description>TypeScriptのプロジェクトを作る度に設定すると思うのでメモ。 前提 Link to heading Webpackでプロジェクトを管理している Linterはesl</description>
    </item>
    <item>
      <title>Goのreflectで構造体の変数にインスタンスを詰める方法</title>
      <link>https://nametake.github.io/posts/2019/09/10/go-reflect-create-instance/</link>
      <pubDate>Tue, 10 Sep 2019 13:39:29 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/09/10/go-reflect-create-instance/</guid>
      <description>構造体の変数にreflectでインスタンスを詰める方法メモ。 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;reflect&amp;#34; ) func main() { var foo *Foo fmt.Println(foo) // nil fmt.Println(&amp;#34;------------&amp;#34;) // nilにアクセスしようとするのでエラー // foo.msg =</description>
    </item>
    <item>
      <title>protoc-gen-gohttpをHttpRule Optionに対応させた</title>
      <link>https://nametake.github.io/posts/2019/08/30/protoc-gen-gohttp-httprule/</link>
      <pubDate>Fri, 30 Aug 2019 01:52:26 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/08/30/protoc-gen-gohttp-httprule/</guid>
      <description>以前、Protocol Buffersのserviceの定義を利用してGoのnet/httpで利用できるようにするためのprotoc-gen-</description>
    </item>
    <item>
      <title>Protocol Buffersを使ったAPIでのNullの設計</title>
      <link>https://nametake.github.io/posts/2019/08/17/protobuf-null-api/</link>
      <pubDate>Sat, 17 Aug 2019 10:44:03 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/08/17/protobuf-null-api/</guid>
      <description>Protocol BuffersのNullの取り扱いの問題 Link to heading Protocol Buffersのproto3の仕様ではmessageの中の値をOptionalで表現する記</description>
    </item>
    <item>
      <title>Goの戻り値をいい感じに補完してくれるvim-snippetsを作った</title>
      <link>https://nametake.github.io/posts/2019/07/29/vim-goiferr-snippets/</link>
      <pubDate>Mon, 29 Jul 2019 22:57:06 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/07/29/vim-goiferr-snippets/</guid>
      <description>最近Vimの設定を整理してcoc.nvimに乗り換えるにあたり、snippetのプラグインもneosnippetからcoc-neosnipp</description>
    </item>
    <item>
      <title>Vimのプラグインを整理した(あとcoc.nvimの紹介)</title>
      <link>https://nametake.github.io/posts/2019/07/25/change-vim-plugins/</link>
      <pubDate>Thu, 25 Jul 2019 00:51:43 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/07/25/change-vim-plugins/</guid>
      <description>ちまちまとdotfilesを育ててきたが、Goの補完が動かなくなっていたり中途半端にLSP対応しようとした痕跡だけ残っていたりしたので、断捨</description>
    </item>
    <item>
      <title>zshのPATHの順番をfish shellに引き継ぐ</title>
      <link>https://nametake.github.io/posts/2019/07/22/pass-zsh-path-to-fish/</link>
      <pubDate>Mon, 22 Jul 2019 01:34:18 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/07/22/pass-zsh-path-to-fish/</guid>
      <description>自分はメインのターミナル環境をfishにしている。 特に設定を細かくしなくてもサクサク動いてくれるので非常に助かっているが、POSIX準拠では</description>
    </item>
    <item>
      <title>FormikとYupを使った動的フォームのバリデーション</title>
      <link>https://nametake.github.io/posts/2019/06/05/formik-yup-dynamic-validation/</link>
      <pubDate>Wed, 05 Jun 2019 23:50:36 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/06/05/formik-yup-dynamic-validation/</guid>
      <description>Formikで動的なFormを作った時に、表示されるFormに応じてYupのバリデーションを切り替える方法でちょっと手間取ったのでメモ。 結論</description>
    </item>
    <item>
      <title>インライン要素の高さを合わせるCSS定義</title>
      <link>https://nametake.github.io/posts/2019/05/29/inline-center/</link>
      <pubDate>Wed, 29 May 2019 15:47:35 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/05/29/inline-center/</guid>
      <description>ラジオボタンとラベルの高さを合わせるCSS定義を何回も調べている気がするのでメモ。 たぶん下の書き方が一番モダンだと思われる。 display: inline-flex; align-items: center;</description>
    </item>
    <item>
      <title>Type SafeなReducerの書き方</title>
      <link>https://nametake.github.io/posts/2019/05/18/type-safe-reducer/</link>
      <pubDate>Sat, 18 May 2019 10:38:55 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/05/18/type-safe-reducer/</guid>
      <description>以前書いた記事で書いたReducerでは、受け取ったActionの型を判別するために、switchで分岐した後に対応したActionの型でキ</description>
    </item>
    <item>
      <title>IntelliJのPopupの候補を展開するKeymap</title>
      <link>https://nametake.github.io/posts/2019/01/20/intellij-popup-expand/</link>
      <pubDate>Sun, 20 Jan 2019 21:05:06 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2019/01/20/intellij-popup-expand/</guid>
      <description>自分は普段Vimでの補完候補を&amp;lt;C-k&amp;gt;で展開しているがIntelliJでの補完候補も同じコマンドで展開したかったのでメモ。 結論</description>
    </item>
    <item>
      <title>labelerrとsuberrを作った話をLTしてきた</title>
      <link>https://nametake.github.io/posts/2018/12/19/created-labelerr-and-suberr/</link>
      <pubDate>Wed, 19 Dec 2018 11:37:17 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2018/12/19/created-labelerr-and-suberr/</guid>
      <description>golang.tokyo #20のLT大会で、labelerrとsuberrを作った話をしてきた。 「Goのerrorは1種類というのは綺麗だとは思うけど、実運用上e</description>
    </item>
    <item>
      <title>Goでのprotocプラグインのテストの書き方</title>
      <link>https://nametake.github.io/posts/2018/12/14/protoc-plugin-test/</link>
      <pubDate>Fri, 14 Dec 2018 00:00:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2018/12/14/protoc-plugin-test/</guid>
      <description>最近周りでProtocol Buffersの話題をよく聞くようになった。 ということは、そろそろ人類はprotocのプラグインを書きたくなる時代</description>
    </item>
    <item>
      <title>TypeScript&#43;React&#43;Reduxチュートリアル</title>
      <link>https://nametake.github.io/posts/2018/12/05/typescript-react-redux-tutorial/</link>
      <pubDate>Wed, 05 Dec 2018 11:08:00 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2018/12/05/typescript-react-redux-tutorial/</guid>
      <description>普段は Go でサーバサイドのコードを書いているが、TypeScript+React+Redux を勉強する機会があった。 その際、巷のチュートリアル</description>
    </item>
    <item>
      <title>VimConf2018感想</title>
      <link>https://nametake.github.io/posts/2018/11/24/vimconf2018/</link>
      <pubDate>Sat, 24 Nov 2018 10:15:34 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2018/11/24/vimconf2018/</guid>
      <description>11月24日にあったVimConf2018へ行ったので参加ブログ。 Keynote - What is the next feature?(o) Link to heading スライド mattnさんの発表。 Keynote - Vim: From hjkl to a platform for plugins Link to</description>
    </item>
    <item>
      <title>Protocol Buffersのserviceをnet/httpに対応させるprotoc-gen-gohttpを作った</title>
      <link>https://nametake.github.io/posts/2018/11/21/protoc-gen-gohttp/</link>
      <pubDate>Wed, 21 Nov 2018 16:32:07 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2018/11/21/protoc-gen-gohttp/</guid>
      <description>nametake/protoc-gen-gohttpというprotocのプラグインを作ったのでその話。 Protocol Buffersとは Link to heading Protocol Buffe</description>
    </item>
    <item>
      <title>GCPの認証済みのhttp.Clientの取得方法</title>
      <link>https://nametake.github.io/posts/2018/11/09/auth-gcp-client/</link>
      <pubDate>Fri, 09 Nov 2018 11:15:24 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2018/11/09/auth-gcp-client/</guid>
      <description>GCPの認証済みのhttp.Clientが欲しいときにちょっとだけ調べたのでメモ。 結論だけ言うと、golang.org/x/oauth2/g</description>
    </item>
    <item>
      <title>neoformatでshfmtを使うときにインデントをタブ文字にしたい時の設定</title>
      <link>https://nametake.github.io/posts/2018/10/10/vim-shfmt-neoformat-indent/</link>
      <pubDate>Wed, 10 Oct 2018 11:44:32 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2018/10/10/vim-shfmt-neoformat-indent/</guid>
      <description>neoformatで使うshfmtはデフォルトだとインデントがスペースだが、チームのコーディング規約に合わせてタブ文字へ変更したかったときに</description>
    </item>
    <item>
      <title>depでprivateリポジトリがupdateできなかったときの解決策</title>
      <link>https://nametake.github.io/posts/2018/09/20/dep-private-repo/</link>
      <pubDate>Thu, 20 Sep 2018 18:47:46 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2018/09/20/dep-private-repo/</guid>
      <description>Goをアップデートした後、dep updateをしたら以下のようなエラーが発生した。 grouped write of manifest, lock and vendor: error while writing out vendor tree: failed to write dep tree: failed to export github.com/nametake/private-repo: unable to update repository: remote: Repository not</description>
    </item>
    <item>
      <title>hugo&#43;github pagesにブログを移転したメモ</title>
      <link>https://nametake.github.io/posts/2018/09/15/hugo-github-pages/</link>
      <pubDate>Sat, 15 Sep 2018 12:20:26 +0900</pubDate>
      <guid>https://nametake.github.io/posts/2018/09/15/hugo-github-pages/</guid>
      <description>大して書いていなかったブログをgithub pages+hugoの組み合わせに移行したのでそのメモ。 とは言うものの、ほとんどHugoの入門用ペ</description>
    </item>
  </channel>
</rss>
